/* keyboard.h - Definitions for keyboard driver
 * vim:ts=4 noexpandtab
 */

#ifndef _KEYBOARD_H
#define _KEYBOARD_H

#include "../lib.h"

#define RELEASED 0x80

#define KBD_PORT 0x60

#define KBD_PREFIX 0xe0
#define KBD_RSHIFT 0x36
#define KBD_LSHIFT 0x2a
#define KBD_CAPSLOCK 0x3a
#define KBD_LCTRL 0x1d
#define KBD_BACKSPACE 0x0e
#define KBD_LALT 0x38

#define KBD_F1 0x3b
#define KBD_F2 0x3c
#define KBD_F3 0x3d

#define KBD_UP 0x48
#define KBD_DOWN 0x50

#define MASK 0xdf
#define CARET 0x40

#define SCAN_TABLE_SIZE 256

#define NO_CHAR 255

// putc special case \t

static uint8_t ctrl_chars [SCAN_TABLE_SIZE] = {
    NO_CHAR, '\x1b', '1', '\x00', '\x1b', '\x1c', '\x1d', '\x1e', '\x1f', '\x7f', '9', '0', '-', '=', NO_CHAR, 'I',
    '\x11', '\x17', '\x05', '\x12', '\x14', '\x19', '\x15', '\t', '\x0f', '\x10', '\x1b', '\x1d', 'J', NO_CHAR, '\x01', '\x13',
    '\x04', '\x06', '\x07', '\x08', '\n', '\x0b', '\x0c', ';', '\'', ' ', NO_CHAR, '\x1c', '\x1a', '\x18', '\x03', '\x16',
    '\x02', '\x0e', '\r', ',', '.', '\x1f', NO_CHAR, 'j', NO_CHAR, '\x00', NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, '-', NO_CHAR, '\x1d', NO_CHAR, 'k', NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR
};

static uint8_t printable_upper [SCAN_TABLE_SIZE] = {
    NO_CHAR, '\x1b', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+', NO_CHAR, '\t',
    'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '{', '}', '\n', NO_CHAR, 'A', 'S',
    'D', 'F', 'G', 'H', 'J', 'K', 'L', ':', '"', '~', NO_CHAR, '|', 'Z', 'X', 'C', 'V',
    'B', 'N', 'M', '<', '>', '?', NO_CHAR, '*', NO_CHAR, ' ', NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, '-', NO_CHAR, '5', NO_CHAR, '+', NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR
};

static uint8_t printable_lower [SCAN_TABLE_SIZE] = {
    NO_CHAR, '\x1b', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', NO_CHAR, '\t',
    'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', '\n', NO_CHAR, 'a', 's',
    'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', '\'', '`', NO_CHAR, '\\', 'z', 'x', 'c', 'v',
    'b', 'n', 'm', ',', '.', '/', NO_CHAR, '*', NO_CHAR, ' ', NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, '-', NO_CHAR, '5', NO_CHAR, '+', NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR,
    NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR, NO_CHAR
};

#endif //_KEYBOARD_H
